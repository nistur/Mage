--[[
modified bin2c from http://lua-users.org/wiki/BinTwoCee

Just creates the source file and doesn't attempt to do the
lua loading
--]]
function bin2c(arg)
  if not arg or not arg[1] then
    return
  end

  local compile, filename = arg[1]:match"^(+?)(.*)"
  local status = arg[2]

  local content = compile=="+"
    and string.dump(assert(loadfile(filename)))
    or assert(io.open(filename,"rb")):read"*a"

  local function boilerplate(fmt)
    local def = filename:gsub("/", "_"):gsub("%.", "_"):upper()
    local sym = filename:gsub(".lua", ""):gsub("/", "")
    return string.format(fmt,
      def,
      def,
      filename,
      sym, content:len(),
      sym, filename,
      sym)
  end

  local dump do
    local numtab={}; for i=0,255 do numtab[string.char(i)]=("%3d,"):format(i) end
    function dump(str)
      return (str:gsub(".", numtab):gsub(("."):rep(80), "%0\n"))
    end
  end

  return boilerplate[=[
  /* code automatically generated by bin2c -- DO NOT EDIT */
  #ifndef __%s_C__
  #define __%s_C__
  /* %s */
  static const unsigned int %sSize=%s;
  static const char* %sName="%s";
  static const char %s[]={
  ]=], dump(content), boilerplate[=[

  };
  #endif/*__%s_C__*/
  ]=]
end